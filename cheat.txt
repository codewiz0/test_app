【単語意味】
print　文字を表示
printf　書式付きで文字を表示
sprintf　書式付きの文字を返す
puts　文字を表示して改行
p　デバッグ（値の種別も表示してくれる）
.length　文字数をカウント
.reverse　文字を反転する
.round　四捨五入
.floor　切り下げ
.ceil　切り上げ
Rational(,)　分数
 / r　Rationalの短縮形
+　文字連結可能
*　文字を指定回数繰り返す
.upcase　文字列を大文字に変換して表示
.upcase!　破壊的なメソッド（元の文字列自体を大文字に上書きしてしまう。）
.downcase　（小文字に変換して表示）
.empty?　空っぽか確認
.include?()　指定した文字を探す
.push()　文字を追加
<<　push()の短縮形
.size　値の数を出す
.sort　並び替え
.keys　keyの一覧
.values　値の一覧
.has_key?　指定したkeyがあるか確認
.has_value?　指定した値があるか確認





【コメントアウト】
#は1行コメントアウト

=begin
=endで囲んだ範囲をコメントアウト

【変数】
変数は"英小文字"or"_"で始めないといけない

【定数】
英大文字で始めないといけない

【配列】
変数に複数の値を突っ込む
colors = [red, blue, yellow, gold]

↑変数colorsにred,blue,yellow,goldが入っている状態

colors[0]　1番目の値
colors[2]　3番目の値
colors[-1]　最後から1番目の値
colors[0..3]　1つ目から4番目の値
colors[0...3]　1つ目から4つ目の一つ手前の値

【ハッシュ】
keyとvalueがセットになっている配列
例えば商品の価格などの場合
大根　150
じゃがいも　120

これをハッシュで書くと

price = {"大根" => 150, "じゃがいも" => 120} #基本形
price = {:大根 => 150, :じゃがいも => 120} #短縮形
price = {大根: 150, じゃがいも: 120} #超短縮形

【変換】
.to_f 浮動小数点数に変換
.to_i　整数に変換
.to_s　文字に変換
.to_a　keyとvalueに変換
.to_h　ハッシュに変換

【%で""や''が省ける】
"he\"llo"
'he\'llo'

%Q(he"llo) # ""の中に"を入れたり
%(he"llo)
%q(he'llo) # ''の中に'を入れる時に見やすい

# 配列も""や''を省ける

["red","blue"]
['red','blue']

%W(red blue) # 値が多い場合に便利
%w(red blue)


【"文字列" % 値】
%s　文字
%d　整数
%s　浮動小数点数

主にハッシュで利用
例、"大根"に250円を入れる
p "大根: %d" % 250

5桁表示のIDで5桁に満たない場合は前を0で埋める。
rateは全体10桁表示で小数点以下は2桁まで表示する場合、

p "id: %05d, rate: %10.2f" %[234, 6243.263]

【条件分岐】
if elsif else end

例、テストの点数によって表示を変える。

puts "テスト何点だったか教えろよww"
score = gets.to_i

if score > 90
    puts "天才\!\!"
elsif score >60
    puts "なかなか"
else
    puts "大丈夫か\!\?"
end


※二択の場合は、こんな書き方もできるよ。

puts "すっげぇ\^\^\;" if score > 90


条件分岐２つ目は case です。

ifで書いたコードは、caseで置き換えることができます。
ちなみにcaseはかなり奥が深いのですが、ここでは単純にif置き換えの話だけでサラッと流します。


さっきのテストの点数のコードをcaseで置き換えると、、、
puts "テスト何点だったか教えろよww"
score = gets.to_i

case score
when 91..100; puts "天才\!\!"
when 61..90; puts "なかなか"
else puts "大丈夫か\!\?"
end

かなりスッキリしたと思います。


【繰り返し】
whileとtimes

i = 0
while i < 10 do
    puts "#{i}: hello"
    i += 1
end

これをtimesで置き換えると、、、

10.times { |i| puts "#{i}: hello" }

めっさシンプルになりました。